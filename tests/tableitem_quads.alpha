/*t = [{"strindex" : 10}, {"another" : true}, { "tab": [1, 3, 5] }, {print : 2}, {true : 10}];*/
/*t = [1, 3, [1, 3, 5]];*/
/*a = objectcopy(t);*/

/*t[0] = 3;*/
/*t.tab[0] = 5;*/
/*print(t);*/
/*print(a);*/

/*b = [[1, 3, [5, 10], [123, 4]], 4];*/

/*b[20] = [];*/
/*b[20][3] = 5;*/

/*a = 2;*/
/*function f() {*/
    /*askdjasd*/
    /*//askdjasd*/
    /*return (function g(a) {*/
        /*return ["eka", 4, a];*/
    /*});*/
/*}*/

/*b[0] = f()("edw");*/
/*c = objectcopy(b);*/
/*print(b);*/
/*print(c);*/

t = [ { "key1" : 1 }, { "key2" : 2 }, { "key3" : "tria" }, { "key4" : true }, { "key5" : [ nil, 3, 4, nil, 5 ] } ];

print("Table t is: ", t, "\n");
print("Lenght of table t is (must be 5):", objecttotalmembers(t),"\n");

function foo() {
    function lala() {
        function prnt() {
            local t = [ ::t, 2, 3.14, "4", true, false ];
            print("Table t in prnt is: ", t, "\n");
        }
        print("Function prnt printing: ", prnt, " and print: ", print, "\n");
        prnt();
    }
    return lala;
}

f = foo();
f();

ind = objectmemberkeys(t);
print("Table indices of global t: ", ind, " which has length: ", objecttotalmembers(ind), "\n");

function my_print () {

    targs = totalarguments();
    if (targs < 0 or targs > 20) {
        print("ERROR in my_print: arguments reported: ", targs, "\n");
        return nil;
    }

    for (i = 0; i < totalarguments(); ++i) {
        print(argument(i));
    }
}

tcopy = objectcopy(t);
print_function = my_print;

print_function("Table copy is: ", tcopy, " ", "and it is printed with print_function", "\n");

function check (variable, type, value) {
    if (typeof(variable) != type) {
        print_function("FAILED type: ", typeof(variable), " != ", type, ", value: ", variable, "\n");
        return nil;
    }
    if (value != variable) {
        print_function("FAILED value: ", variable, " != ", value, "\n");
        return nil;
    }
    print_function("PASSED: value: ", value, " type: ", type, "\n");
}

check(strtonum("foo"), "nil", nil);
check(strtonum("3.12a"), "nil", nil);
check(strtonum("3.141"), "number", 3.141);
check(sqrt(2), "number", 1.41421356237309504880);
check(sqrt(-1), "nil", nil);
check(cos(45), "number", 0.5);
check(sin(45), "number", 0.5);
check(totalarguments(), "nil", nil);
check(argument(0), "nil", nil);


ax = strtonum("12");
print("--->", ax, "\n");


print("Testing lib function typeof\n\n");
print("trypeof([1,2,3])\t:>", typeof([1,2,3]), "<\n");
print("trypeof((function(){}))\t:", typeof((function(){})), "<\n");
print("trypeof(typeof)\t:", typeof(typeof), "<\n\n");
print("Testing lib function input and typeof (type exit for exit)\n\n");

stdin = nil;
while (true) {

    if (typeof(stdin) == "string") {
        if (stdin == "exit") {
            break;
        }
    }

    print("input: ");
    stdin = input();
    print("typeof(stdin): ", typeof(stdin), ", value of stdin: ", stdin, "\n");
}

